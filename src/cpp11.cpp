// Generated by cpp11: do not edit by hand
// clang-format off


#include "cpp11/declarations.hpp"

// bqs.cpp
std::string grpc_version();
extern "C" SEXP _bigrquerystorage_grpc_version() {
  BEGIN_CPP11
    return cpp11::as_sexp(grpc_version());
  END_CPP11
}
// bqs.cpp
cpp11::list bqs_dl_arrow_batches(std::string parent, std::string pj_id, std::string ds_id, std::string tb_id, std::string clientInfo, std::string config);
extern "C" SEXP _bigrquerystorage_bqs_dl_arrow_batches(SEXP parent, SEXP pj_id, SEXP ds_id, SEXP tb_id, SEXP clientInfo, SEXP config) {
  BEGIN_CPP11
    return cpp11::as_sexp(bqs_dl_arrow_batches(cpp11::as_cpp<cpp11::decay_t<std::string>>(parent), cpp11::as_cpp<cpp11::decay_t<std::string>>(pj_id), cpp11::as_cpp<cpp11::decay_t<std::string>>(ds_id), cpp11::as_cpp<cpp11::decay_t<std::string>>(tb_id), cpp11::as_cpp<cpp11::decay_t<std::string>>(clientInfo), cpp11::as_cpp<cpp11::decay_t<std::string>>(config)));
  END_CPP11
}

extern "C" {
/* .Call calls */
extern SEXP _bigrquerystorage_bqs_dl_arrow_batches(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
extern SEXP _bigrquerystorage_grpc_version();

static const R_CallMethodDef CallEntries[] = {
    {"_bigrquerystorage_bqs_dl_arrow_batches", (DL_FUNC) &_bigrquerystorage_bqs_dl_arrow_batches, 6},
    {"_bigrquerystorage_grpc_version",         (DL_FUNC) &_bigrquerystorage_grpc_version,         0},
    {NULL, NULL, 0}
};
}

extern "C" void R_init_bigrquerystorage(DllInfo* dll){
  R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
  R_useDynamicSymbols(dll, FALSE);
}
