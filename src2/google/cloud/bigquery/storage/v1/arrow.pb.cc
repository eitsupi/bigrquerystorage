// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/bigquery/storage/v1/arrow.proto

#include "google/cloud/bigquery/storage/v1/arrow.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace google {
namespace cloud {
namespace bigquery {
namespace storage {
namespace v1 {
class ArrowSchemaDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ArrowSchema> _instance;
} _ArrowSchema_default_instance_;
class ArrowRecordBatchDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ArrowRecordBatch> _instance;
} _ArrowRecordBatch_default_instance_;
}  // namespace v1
}  // namespace storage
}  // namespace bigquery
}  // namespace cloud
}  // namespace google
static void InitDefaultsscc_info_ArrowRecordBatch_google_2fcloud_2fbigquery_2fstorage_2fv1_2farrow_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::bigquery::storage::v1::_ArrowRecordBatch_default_instance_;
    new (ptr) ::google::cloud::bigquery::storage::v1::ArrowRecordBatch();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::bigquery::storage::v1::ArrowRecordBatch::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ArrowRecordBatch_google_2fcloud_2fbigquery_2fstorage_2fv1_2farrow_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ArrowRecordBatch_google_2fcloud_2fbigquery_2fstorage_2fv1_2farrow_2eproto}, {}};

static void InitDefaultsscc_info_ArrowSchema_google_2fcloud_2fbigquery_2fstorage_2fv1_2farrow_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::bigquery::storage::v1::_ArrowSchema_default_instance_;
    new (ptr) ::google::cloud::bigquery::storage::v1::ArrowSchema();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::bigquery::storage::v1::ArrowSchema::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ArrowSchema_google_2fcloud_2fbigquery_2fstorage_2fv1_2farrow_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ArrowSchema_google_2fcloud_2fbigquery_2fstorage_2fv1_2farrow_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_google_2fcloud_2fbigquery_2fstorage_2fv1_2farrow_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_google_2fcloud_2fbigquery_2fstorage_2fv1_2farrow_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_google_2fcloud_2fbigquery_2fstorage_2fv1_2farrow_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_google_2fcloud_2fbigquery_2fstorage_2fv1_2farrow_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::cloud::bigquery::storage::v1::ArrowSchema, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::cloud::bigquery::storage::v1::ArrowSchema, serialized_schema_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::cloud::bigquery::storage::v1::ArrowRecordBatch, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::cloud::bigquery::storage::v1::ArrowRecordBatch, serialized_record_batch_),
  PROTOBUF_FIELD_OFFSET(::google::cloud::bigquery::storage::v1::ArrowRecordBatch, row_count_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::cloud::bigquery::storage::v1::ArrowSchema)},
  { 6, -1, sizeof(::google::cloud::bigquery::storage::v1::ArrowRecordBatch)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::cloud::bigquery::storage::v1::_ArrowSchema_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::cloud::bigquery::storage::v1::_ArrowRecordBatch_default_instance_),
};

const char descriptor_table_protodef_google_2fcloud_2fbigquery_2fstorage_2fv1_2farrow_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n,google/cloud/bigquery/storage/v1/arrow"
  ".proto\022 google.cloud.bigquery.storage.v1"
  "\"(\n\013ArrowSchema\022\031\n\021serialized_schema\030\001 \001"
  "(\014\"F\n\020ArrowRecordBatch\022\037\n\027serialized_rec"
  "ord_batch\030\001 \001(\014\022\021\n\trow_count\030\002 \001(\003B\303\001\n$c"
  "om.google.cloud.bigquery.storage.v1B\nArr"
  "owProtoP\001ZGgoogle.golang.org/genproto/go"
  "ogleapis/cloud/bigquery/storage/v1;stora"
  "ge\252\002 Google.Cloud.BigQuery.Storage.V1\312\002 "
  "Google\\Cloud\\BigQuery\\Storage\\V1b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_google_2fcloud_2fbigquery_2fstorage_2fv1_2farrow_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_google_2fcloud_2fbigquery_2fstorage_2fv1_2farrow_2eproto_sccs[2] = {
  &scc_info_ArrowRecordBatch_google_2fcloud_2fbigquery_2fstorage_2fv1_2farrow_2eproto.base,
  &scc_info_ArrowSchema_google_2fcloud_2fbigquery_2fstorage_2fv1_2farrow_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_google_2fcloud_2fbigquery_2fstorage_2fv1_2farrow_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_google_2fcloud_2fbigquery_2fstorage_2fv1_2farrow_2eproto = {
  false, false, descriptor_table_protodef_google_2fcloud_2fbigquery_2fstorage_2fv1_2farrow_2eproto, "google/cloud/bigquery/storage/v1/arrow.proto", 400,
  &descriptor_table_google_2fcloud_2fbigquery_2fstorage_2fv1_2farrow_2eproto_once, descriptor_table_google_2fcloud_2fbigquery_2fstorage_2fv1_2farrow_2eproto_sccs, descriptor_table_google_2fcloud_2fbigquery_2fstorage_2fv1_2farrow_2eproto_deps, 2, 0,
  schemas, file_default_instances, TableStruct_google_2fcloud_2fbigquery_2fstorage_2fv1_2farrow_2eproto::offsets,
  file_level_metadata_google_2fcloud_2fbigquery_2fstorage_2fv1_2farrow_2eproto, 2, file_level_enum_descriptors_google_2fcloud_2fbigquery_2fstorage_2fv1_2farrow_2eproto, file_level_service_descriptors_google_2fcloud_2fbigquery_2fstorage_2fv1_2farrow_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_google_2fcloud_2fbigquery_2fstorage_2fv1_2farrow_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_google_2fcloud_2fbigquery_2fstorage_2fv1_2farrow_2eproto)), true);
namespace google {
namespace cloud {
namespace bigquery {
namespace storage {
namespace v1 {

// ===================================================================

void ArrowSchema::InitAsDefaultInstance() {
}
class ArrowSchema::_Internal {
 public:
};

ArrowSchema::ArrowSchema(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.bigquery.storage.v1.ArrowSchema)
}
ArrowSchema::ArrowSchema(const ArrowSchema& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  serialized_schema_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_serialized_schema().empty()) {
    serialized_schema_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_serialized_schema(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.bigquery.storage.v1.ArrowSchema)
}

void ArrowSchema::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ArrowSchema_google_2fcloud_2fbigquery_2fstorage_2fv1_2farrow_2eproto.base);
  serialized_schema_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ArrowSchema::~ArrowSchema() {
  // @@protoc_insertion_point(destructor:google.cloud.bigquery.storage.v1.ArrowSchema)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ArrowSchema::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  serialized_schema_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ArrowSchema::ArenaDtor(void* object) {
  ArrowSchema* _this = reinterpret_cast< ArrowSchema* >(object);
  (void)_this;
}
void ArrowSchema::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ArrowSchema::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ArrowSchema& ArrowSchema::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ArrowSchema_google_2fcloud_2fbigquery_2fstorage_2fv1_2farrow_2eproto.base);
  return *internal_default_instance();
}


void ArrowSchema::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.bigquery.storage.v1.ArrowSchema)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  serialized_schema_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ArrowSchema::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes serialized_schema = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_serialized_schema();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ArrowSchema::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.bigquery.storage.v1.ArrowSchema)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes serialized_schema = 1;
  if (this->serialized_schema().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_serialized_schema(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.bigquery.storage.v1.ArrowSchema)
  return target;
}

size_t ArrowSchema::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.bigquery.storage.v1.ArrowSchema)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes serialized_schema = 1;
  if (this->serialized_schema().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_serialized_schema());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ArrowSchema::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.bigquery.storage.v1.ArrowSchema)
  GOOGLE_DCHECK_NE(&from, this);
  const ArrowSchema* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ArrowSchema>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.bigquery.storage.v1.ArrowSchema)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.bigquery.storage.v1.ArrowSchema)
    MergeFrom(*source);
  }
}

void ArrowSchema::MergeFrom(const ArrowSchema& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.bigquery.storage.v1.ArrowSchema)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.serialized_schema().size() > 0) {
    _internal_set_serialized_schema(from._internal_serialized_schema());
  }
}

void ArrowSchema::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.bigquery.storage.v1.ArrowSchema)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ArrowSchema::CopyFrom(const ArrowSchema& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.bigquery.storage.v1.ArrowSchema)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ArrowSchema::IsInitialized() const {
  return true;
}

void ArrowSchema::InternalSwap(ArrowSchema* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  serialized_schema_.Swap(&other->serialized_schema_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ArrowSchema::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ArrowRecordBatch::InitAsDefaultInstance() {
}
class ArrowRecordBatch::_Internal {
 public:
};

ArrowRecordBatch::ArrowRecordBatch(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.bigquery.storage.v1.ArrowRecordBatch)
}
ArrowRecordBatch::ArrowRecordBatch(const ArrowRecordBatch& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  serialized_record_batch_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_serialized_record_batch().empty()) {
    serialized_record_batch_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_serialized_record_batch(),
      GetArena());
  }
  row_count_ = from.row_count_;
  // @@protoc_insertion_point(copy_constructor:google.cloud.bigquery.storage.v1.ArrowRecordBatch)
}

void ArrowRecordBatch::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ArrowRecordBatch_google_2fcloud_2fbigquery_2fstorage_2fv1_2farrow_2eproto.base);
  serialized_record_batch_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  row_count_ = PROTOBUF_LONGLONG(0);
}

ArrowRecordBatch::~ArrowRecordBatch() {
  // @@protoc_insertion_point(destructor:google.cloud.bigquery.storage.v1.ArrowRecordBatch)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ArrowRecordBatch::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  serialized_record_batch_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ArrowRecordBatch::ArenaDtor(void* object) {
  ArrowRecordBatch* _this = reinterpret_cast< ArrowRecordBatch* >(object);
  (void)_this;
}
void ArrowRecordBatch::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ArrowRecordBatch::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ArrowRecordBatch& ArrowRecordBatch::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ArrowRecordBatch_google_2fcloud_2fbigquery_2fstorage_2fv1_2farrow_2eproto.base);
  return *internal_default_instance();
}


void ArrowRecordBatch::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.bigquery.storage.v1.ArrowRecordBatch)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  serialized_record_batch_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  row_count_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ArrowRecordBatch::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes serialized_record_batch = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_serialized_record_batch();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 row_count = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          row_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ArrowRecordBatch::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.bigquery.storage.v1.ArrowRecordBatch)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes serialized_record_batch = 1;
  if (this->serialized_record_batch().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_serialized_record_batch(), target);
  }

  // int64 row_count = 2;
  if (this->row_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_row_count(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.bigquery.storage.v1.ArrowRecordBatch)
  return target;
}

size_t ArrowRecordBatch::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.bigquery.storage.v1.ArrowRecordBatch)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes serialized_record_batch = 1;
  if (this->serialized_record_batch().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_serialized_record_batch());
  }

  // int64 row_count = 2;
  if (this->row_count() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_row_count());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ArrowRecordBatch::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.bigquery.storage.v1.ArrowRecordBatch)
  GOOGLE_DCHECK_NE(&from, this);
  const ArrowRecordBatch* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ArrowRecordBatch>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.bigquery.storage.v1.ArrowRecordBatch)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.bigquery.storage.v1.ArrowRecordBatch)
    MergeFrom(*source);
  }
}

void ArrowRecordBatch::MergeFrom(const ArrowRecordBatch& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.bigquery.storage.v1.ArrowRecordBatch)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.serialized_record_batch().size() > 0) {
    _internal_set_serialized_record_batch(from._internal_serialized_record_batch());
  }
  if (from.row_count() != 0) {
    _internal_set_row_count(from._internal_row_count());
  }
}

void ArrowRecordBatch::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.bigquery.storage.v1.ArrowRecordBatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ArrowRecordBatch::CopyFrom(const ArrowRecordBatch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.bigquery.storage.v1.ArrowRecordBatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ArrowRecordBatch::IsInitialized() const {
  return true;
}

void ArrowRecordBatch::InternalSwap(ArrowRecordBatch* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  serialized_record_batch_.Swap(&other->serialized_record_batch_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(row_count_, other->row_count_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ArrowRecordBatch::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace storage
}  // namespace bigquery
}  // namespace cloud
}  // namespace google
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::google::cloud::bigquery::storage::v1::ArrowSchema* Arena::CreateMaybeMessage< ::google::cloud::bigquery::storage::v1::ArrowSchema >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::cloud::bigquery::storage::v1::ArrowSchema >(arena);
}
template<> PROTOBUF_NOINLINE ::google::cloud::bigquery::storage::v1::ArrowRecordBatch* Arena::CreateMaybeMessage< ::google::cloud::bigquery::storage::v1::ArrowRecordBatch >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::cloud::bigquery::storage::v1::ArrowRecordBatch >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
