// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/bigquery/storage/v1/avro.proto

#include "google/cloud/bigquery/storage/v1/avro.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace google {
namespace cloud {
namespace bigquery {
namespace storage {
namespace v1 {
class AvroSchemaDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AvroSchema> _instance;
} _AvroSchema_default_instance_;
class AvroRowsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AvroRows> _instance;
} _AvroRows_default_instance_;
}  // namespace v1
}  // namespace storage
}  // namespace bigquery
}  // namespace cloud
}  // namespace google
static void InitDefaultsscc_info_AvroRows_google_2fcloud_2fbigquery_2fstorage_2fv1_2favro_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::bigquery::storage::v1::_AvroRows_default_instance_;
    new (ptr) ::google::cloud::bigquery::storage::v1::AvroRows();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::bigquery::storage::v1::AvroRows::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AvroRows_google_2fcloud_2fbigquery_2fstorage_2fv1_2favro_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AvroRows_google_2fcloud_2fbigquery_2fstorage_2fv1_2favro_2eproto}, {}};

static void InitDefaultsscc_info_AvroSchema_google_2fcloud_2fbigquery_2fstorage_2fv1_2favro_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::bigquery::storage::v1::_AvroSchema_default_instance_;
    new (ptr) ::google::cloud::bigquery::storage::v1::AvroSchema();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::bigquery::storage::v1::AvroSchema::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AvroSchema_google_2fcloud_2fbigquery_2fstorage_2fv1_2favro_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AvroSchema_google_2fcloud_2fbigquery_2fstorage_2fv1_2favro_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_google_2fcloud_2fbigquery_2fstorage_2fv1_2favro_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_google_2fcloud_2fbigquery_2fstorage_2fv1_2favro_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_google_2fcloud_2fbigquery_2fstorage_2fv1_2favro_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_google_2fcloud_2fbigquery_2fstorage_2fv1_2favro_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::cloud::bigquery::storage::v1::AvroSchema, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::cloud::bigquery::storage::v1::AvroSchema, schema_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::cloud::bigquery::storage::v1::AvroRows, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::cloud::bigquery::storage::v1::AvroRows, serialized_binary_rows_),
  PROTOBUF_FIELD_OFFSET(::google::cloud::bigquery::storage::v1::AvroRows, row_count_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::cloud::bigquery::storage::v1::AvroSchema)},
  { 6, -1, sizeof(::google::cloud::bigquery::storage::v1::AvroRows)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::cloud::bigquery::storage::v1::_AvroSchema_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::cloud::bigquery::storage::v1::_AvroRows_default_instance_),
};

const char descriptor_table_protodef_google_2fcloud_2fbigquery_2fstorage_2fv1_2favro_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n+google/cloud/bigquery/storage/v1/avro."
  "proto\022 google.cloud.bigquery.storage.v1\""
  "\034\n\nAvroSchema\022\016\n\006schema\030\001 \001(\t\"=\n\010AvroRow"
  "s\022\036\n\026serialized_binary_rows\030\001 \001(\014\022\021\n\trow"
  "_count\030\002 \001(\003B\302\001\n$com.google.cloud.bigque"
  "ry.storage.v1B\tAvroProtoP\001ZGgoogle.golan"
  "g.org/genproto/googleapis/cloud/bigquery"
  "/storage/v1;storage\252\002 Google.Cloud.BigQu"
  "ery.Storage.V1\312\002 Google\\Cloud\\BigQuery\\S"
  "torage\\V1b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_google_2fcloud_2fbigquery_2fstorage_2fv1_2favro_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_google_2fcloud_2fbigquery_2fstorage_2fv1_2favro_2eproto_sccs[2] = {
  &scc_info_AvroRows_google_2fcloud_2fbigquery_2fstorage_2fv1_2favro_2eproto.base,
  &scc_info_AvroSchema_google_2fcloud_2fbigquery_2fstorage_2fv1_2favro_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_google_2fcloud_2fbigquery_2fstorage_2fv1_2favro_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_google_2fcloud_2fbigquery_2fstorage_2fv1_2favro_2eproto = {
  false, false, descriptor_table_protodef_google_2fcloud_2fbigquery_2fstorage_2fv1_2favro_2eproto, "google/cloud/bigquery/storage/v1/avro.proto", 377,
  &descriptor_table_google_2fcloud_2fbigquery_2fstorage_2fv1_2favro_2eproto_once, descriptor_table_google_2fcloud_2fbigquery_2fstorage_2fv1_2favro_2eproto_sccs, descriptor_table_google_2fcloud_2fbigquery_2fstorage_2fv1_2favro_2eproto_deps, 2, 0,
  schemas, file_default_instances, TableStruct_google_2fcloud_2fbigquery_2fstorage_2fv1_2favro_2eproto::offsets,
  file_level_metadata_google_2fcloud_2fbigquery_2fstorage_2fv1_2favro_2eproto, 2, file_level_enum_descriptors_google_2fcloud_2fbigquery_2fstorage_2fv1_2favro_2eproto, file_level_service_descriptors_google_2fcloud_2fbigquery_2fstorage_2fv1_2favro_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_google_2fcloud_2fbigquery_2fstorage_2fv1_2favro_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_google_2fcloud_2fbigquery_2fstorage_2fv1_2favro_2eproto)), true);
namespace google {
namespace cloud {
namespace bigquery {
namespace storage {
namespace v1 {

// ===================================================================

void AvroSchema::InitAsDefaultInstance() {
}
class AvroSchema::_Internal {
 public:
};

AvroSchema::AvroSchema(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.bigquery.storage.v1.AvroSchema)
}
AvroSchema::AvroSchema(const AvroSchema& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  schema_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_schema().empty()) {
    schema_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_schema(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.bigquery.storage.v1.AvroSchema)
}

void AvroSchema::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AvroSchema_google_2fcloud_2fbigquery_2fstorage_2fv1_2favro_2eproto.base);
  schema_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

AvroSchema::~AvroSchema() {
  // @@protoc_insertion_point(destructor:google.cloud.bigquery.storage.v1.AvroSchema)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AvroSchema::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  schema_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AvroSchema::ArenaDtor(void* object) {
  AvroSchema* _this = reinterpret_cast< AvroSchema* >(object);
  (void)_this;
}
void AvroSchema::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AvroSchema::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AvroSchema& AvroSchema::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AvroSchema_google_2fcloud_2fbigquery_2fstorage_2fv1_2favro_2eproto.base);
  return *internal_default_instance();
}


void AvroSchema::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.bigquery.storage.v1.AvroSchema)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  schema_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AvroSchema::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string schema = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_schema();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "google.cloud.bigquery.storage.v1.AvroSchema.schema"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AvroSchema::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.bigquery.storage.v1.AvroSchema)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string schema = 1;
  if (this->schema().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_schema().data(), static_cast<int>(this->_internal_schema().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.storage.v1.AvroSchema.schema");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_schema(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.bigquery.storage.v1.AvroSchema)
  return target;
}

size_t AvroSchema::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.bigquery.storage.v1.AvroSchema)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string schema = 1;
  if (this->schema().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_schema());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AvroSchema::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.bigquery.storage.v1.AvroSchema)
  GOOGLE_DCHECK_NE(&from, this);
  const AvroSchema* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AvroSchema>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.bigquery.storage.v1.AvroSchema)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.bigquery.storage.v1.AvroSchema)
    MergeFrom(*source);
  }
}

void AvroSchema::MergeFrom(const AvroSchema& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.bigquery.storage.v1.AvroSchema)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.schema().size() > 0) {
    _internal_set_schema(from._internal_schema());
  }
}

void AvroSchema::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.bigquery.storage.v1.AvroSchema)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AvroSchema::CopyFrom(const AvroSchema& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.bigquery.storage.v1.AvroSchema)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AvroSchema::IsInitialized() const {
  return true;
}

void AvroSchema::InternalSwap(AvroSchema* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  schema_.Swap(&other->schema_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata AvroSchema::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AvroRows::InitAsDefaultInstance() {
}
class AvroRows::_Internal {
 public:
};

AvroRows::AvroRows(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.bigquery.storage.v1.AvroRows)
}
AvroRows::AvroRows(const AvroRows& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  serialized_binary_rows_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_serialized_binary_rows().empty()) {
    serialized_binary_rows_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_serialized_binary_rows(),
      GetArena());
  }
  row_count_ = from.row_count_;
  // @@protoc_insertion_point(copy_constructor:google.cloud.bigquery.storage.v1.AvroRows)
}

void AvroRows::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AvroRows_google_2fcloud_2fbigquery_2fstorage_2fv1_2favro_2eproto.base);
  serialized_binary_rows_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  row_count_ = PROTOBUF_LONGLONG(0);
}

AvroRows::~AvroRows() {
  // @@protoc_insertion_point(destructor:google.cloud.bigquery.storage.v1.AvroRows)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AvroRows::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  serialized_binary_rows_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AvroRows::ArenaDtor(void* object) {
  AvroRows* _this = reinterpret_cast< AvroRows* >(object);
  (void)_this;
}
void AvroRows::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AvroRows::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AvroRows& AvroRows::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AvroRows_google_2fcloud_2fbigquery_2fstorage_2fv1_2favro_2eproto.base);
  return *internal_default_instance();
}


void AvroRows::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.bigquery.storage.v1.AvroRows)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  serialized_binary_rows_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  row_count_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AvroRows::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes serialized_binary_rows = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_serialized_binary_rows();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 row_count = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          row_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AvroRows::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.bigquery.storage.v1.AvroRows)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes serialized_binary_rows = 1;
  if (this->serialized_binary_rows().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_serialized_binary_rows(), target);
  }

  // int64 row_count = 2;
  if (this->row_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_row_count(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.bigquery.storage.v1.AvroRows)
  return target;
}

size_t AvroRows::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.bigquery.storage.v1.AvroRows)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes serialized_binary_rows = 1;
  if (this->serialized_binary_rows().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_serialized_binary_rows());
  }

  // int64 row_count = 2;
  if (this->row_count() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_row_count());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AvroRows::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.bigquery.storage.v1.AvroRows)
  GOOGLE_DCHECK_NE(&from, this);
  const AvroRows* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AvroRows>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.bigquery.storage.v1.AvroRows)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.bigquery.storage.v1.AvroRows)
    MergeFrom(*source);
  }
}

void AvroRows::MergeFrom(const AvroRows& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.bigquery.storage.v1.AvroRows)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.serialized_binary_rows().size() > 0) {
    _internal_set_serialized_binary_rows(from._internal_serialized_binary_rows());
  }
  if (from.row_count() != 0) {
    _internal_set_row_count(from._internal_row_count());
  }
}

void AvroRows::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.bigquery.storage.v1.AvroRows)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AvroRows::CopyFrom(const AvroRows& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.bigquery.storage.v1.AvroRows)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AvroRows::IsInitialized() const {
  return true;
}

void AvroRows::InternalSwap(AvroRows* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  serialized_binary_rows_.Swap(&other->serialized_binary_rows_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(row_count_, other->row_count_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AvroRows::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace storage
}  // namespace bigquery
}  // namespace cloud
}  // namespace google
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::google::cloud::bigquery::storage::v1::AvroSchema* Arena::CreateMaybeMessage< ::google::cloud::bigquery::storage::v1::AvroSchema >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::cloud::bigquery::storage::v1::AvroSchema >(arena);
}
template<> PROTOBUF_NOINLINE ::google::cloud::bigquery::storage::v1::AvroRows* Arena::CreateMaybeMessage< ::google::cloud::bigquery::storage::v1::AvroRows >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::cloud::bigquery::storage::v1::AvroRows >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
