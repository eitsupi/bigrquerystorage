% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bqs_download.R
\name{bqs_table_download}
\alias{bqs_table_download}
\title{Download table from BigQuery using BigQuery Storage API}
\usage{
bqs_table_download(
  x,
  parent,
  as_data_frame = TRUE,
  access_token = "",
  snapshot_time = 0L,
  selected_fields = character(),
  row_restriction = ""
)
}
\arguments{
\item{x}{BigQuery table reference `{project}.{dataset}.{table_name}`}

\item{parent}{Used as parent for `CreateReadSession`
grpc method.}

\item{as_data_frame}{Transform to a data.frame after arrow processing.}

\item{access_token}{Access token}

\item{snapshot_time}{Snapshot time}

\item{selected_fields}{A character vector of field to select from table.}

\item{row_restriction}{Restriction to apply to the table.}
}
\description{
Download table from BigQuery using BigQuery Storage API
}
\details{
About Crendentials

If your application runs inside a Google Cloud environment that has
a default service account, your application can retrieve the service
account credentials to call Google Cloud APIs. Such environments
include Compute Engine, Google Kubernetes Engine, App Engine,
Cloud Run, and Cloud Functions. We recommend using this strategy
because it is more convenient and secure than manually passing credentials.

Additionally, we recommend you use Google Cloud Client Libraries for
your application. Google Cloud Client Libraries use a library called
Application Default Credentials (ADC) to automatically find your service
account credentials. ADC looks for service account credentials
in the following order:

1. If the environment variable GOOGLE_APPLICATION_CREDENTIALS is set,
ADC uses the service account file that the variable points to.
2. If the environment variable GOOGLE_APPLICATION_CREDENTIALS isn't
set, ADC uses the default service account that Compute Engine,
Google Kubernetes Engine, App Engine, Cloud Run, and Cloud
Functions provide.
3. If ADC can't use either of the above credentials, an error occurs.
}
